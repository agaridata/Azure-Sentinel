{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 11,
            "metadata": {
                "description": "Specify a project name that is used for generating resource names."
            },
            "defaultValue": "Enter Project Name (up to 11 chars)"
        },
        "clientID": {
            "type": "string"
        },
        "clientSecret": {
            "type": "string"
        },
        "enableBrandProtectionAPI": {
            "type": "bool"
        },
        "enablePhishingDefenseAPI": {
            "type": "bool"
        },
        "enablePhishingResponseAPI": {
            "type": "bool"
        },
        "enableSecurityGraphSharing": {
            "type": "bool"
        },
         "graphTenantId": {
            "type": "string",
            "defaultValue": "Enter MS Graph Tenant ID"
        },
        "graphClientId": {
            "type": "string",
            "defaultValue": "Enter MS Graph Client ID"
        },
        "graphClientSecret": {
          "type": "string",
          "defaultValue": "Enter MS Graph Client Secret"
        },
        "location": {
            "type": "String",
            "allowedValues": [
              "eastus",
              "westus"
            ],
            "defaultValue": "eastus",
            "metadata": {
              "description": "Specifies the location in which to create the workspace."
            }
        },
        "sku": {
            "type": "String",
            "allowedValues": [
              "Standalone",
              "PerNode",
              "PerGB2018"
            ],
            "defaultValue": "PerGB2018",
            "metadata": {
                "description": "Specifies the service tier of the workspace: Standalone, PerNode, Per-GB"
            }
        }
    },
    "variables": {
        "portal": "[environment().portal]",
        "storageSuffix": "[environment().suffixes.storage]"
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('projectName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "Name": "[parameters('sku')]"
                },
                "features": {
                    "searchVersion": 1
                }
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('projectName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[parameters('projectName')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(parameters('projectName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('projectName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "functionapp",
            "properties": {
                "name": "[parameters('projectName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('projectName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(parameters('projectName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('projectName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(parameters('projectName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('projectName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('projectName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(parameters('projectName')))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('projectName'))]",
                "[resourceId('Microsoft.Insights/components', parameters('projectName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[parameters('projectName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('projectName'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "siteConfig": {
                    "powerShellVersion": "~7"
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('projectName'))]",
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('projectName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~3",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', parameters('projectName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', parameters('projectName')), '2015-05-01').ConnectionString]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(parameters('projectName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('projectName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('storageSuffix')))]",
                        "WEBSITE_CONTENTSHARE": "[toLower(parameters('projectName'))]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(parameters('projectName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('projectName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('storageSuffix')))]",
                        "clientID": "[parameters('clientID')]",
                        "clientSecret": "[parameters('clientSecret')]",
                        "graphTenantId": "[parameters('graphTenantId')]",
                        "graphClientId": "[parameters('graphClientId')]",
                        "graphClientSecret": "[parameters('graphClientSecret')]",
                        "enablePhishingDefenseAPI": "[parameters('enablePhishingDefenseAPI')]",
                        "enableBrandProtectionAPI": "[parameters('enableBrandProtectionAPI')]",
                        "enablePhishingResponseAPI": "[parameters('enablePhishingResponseAPI')]",
                        "enableSecurityGraphSharing": "[parameters('enableSecurityGraphSharing')]",
                        "functionName": "[parameters('projectName')]",
                        "resGroupName": "[resourceGroup().name]",
                        "subId": "[subscription().subscriptionId]",
                        "bpLastLogTime": "",
                        "pdLastLogTime": "",
                        "prLastLogTime": "",
                        "workspaceId": "[reference(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces/', parameters('projectName')), '2015-11-01-preview').customerId]",
                        "workspaceKey": "[listKeys(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces/', parameters('projectName')), '2015-11-01-preview').primarySharedKey]",
                        "logAnaltyicsUri": "[replace(variables('portal'), 'https://portal', concat('https://', toLower(reference(resourceId(resourceGroup().name, 'Microsoft.OperationalInsights/workspaces/', parameters('projectName')), '2015-11-01-preview').customerId), '.ods.opinsights'))]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/sentinel-agari-functionapp"
                    } 
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('projectName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('projectName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('projectName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('projectName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('projectName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('projectName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('projectName'), '/default/', tolower(parameters('projectName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('projectName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('projectName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        }
    ]
}
